################################################################################
#                     clamd configuration file customized                      #
#                 by Matt Lombana (mlombana@matt.lombana.com)                  #
################################################################################

# File information from https://www.systutorials.com/docs/linux/man/5-clamd.conf/
#  see man clamd.conf (5)

# File Format Arguments:
# BOOL   - Boolean value (yes/no or true/false or 1/0).
# STRING - String without blank characters.
# SIZE   - Size in bytes.
#          You can use 'M' or 'm' modifiers for megabytes and 'K' or 'k' for
#          kilobytes. To specify the size in bytes just don't use modifiers.
# NUMBER - Unsigned integer.


# Disable the example directive. If this option is set clamd will not run
# Example

################################################################################
#                                 Log Options                                  #
################################################################################
#
# Save all reports to a log file.
# Default: disabled
LogFile /var/log/clamav/clamd.log

# By default the log file is locked for writing and only a single daemon
#  process can write to it. This option disables the lock.
# Default: no
LogFileUnlock false

# Maximum size of the log file.
# Value of 0 disables the limit.
# Default: 1048576
LogFileMaxSize 1048576

# Log time for each message.
# Default: no
LogTime true

# Log all clean files.
#  Useful in debugging but drastically increases the log size.
# Default: no
LogClean false

# Use the system logger (can work together with LogFile).
# Default: no
LogSyslog false

# Type of syslog messages
# Please refer to 'man syslog' for facility names.
# Default: LOG_LOCAL6
LogFacility LOG_LOCAL6

# Enable verbose logging.
# Default: no
LogVerbose false

# Rotate log file. Requires LogFileMaxSize option set prior to this option.
# Default: no
LogRotate false

# Log additional information about the infected file, such as its size and
#  hash, together with the virus name.
# Default: no
ExtendedDetectionInfo true

################################################################################
#                                Other Options                                 #
################################################################################

# Save the process identifier of a listening daemon (main thread) to a
#  specified file.
# Default: disabled
PidFile /var/run/clamav/clamd.pid

# This option allows you to change the default temporary directory.
# Default: system specific (usually /tmp or /var/tmp).
# TemporaryDirectory is not set to its default /tmp here to make overriding
# the default with environment variables TMPDIR/TMP/TEMP possible
# TemporaryDirectory STRING

# This option allows you to change the default database directory. If you
#  enable it, please make sure it points to the same directory in both clamd and
#  freshclam.
# Default: defined at configuration (/usr/local/share/clamav)
DatabaseDirectory /var/lib/clamav

# Only load the official signatures published by the ClamAV project.
# Default: no
OfficialDatabaseOnly false

# Maximum number of threads running at the same time.
# Default: 10
MaxThreads 12

# This option specifies the time (in seconds) after which clamd should timeout
#  if a client doesn't provide any data.
# Default: 120
ReadTimeout 180

# This option specifies the time (in seconds) after which clamd should timeout
#  if a client doesn't provide any initial command after connecting. Note: the
#  timeout for subsequents commands, and/or data chunks is specified by
#  ReadTimeout.
# Default: 5
CommandReadTimeout 5

# This option specifies how long to wait (in milliseconds) if the send buffer
#  is full. Keep this value low to prevent clamd hanging.
# Default: 500
SendBufTimeout 200

# Maximum number of queued items (including those being processed by MaxThreads
#  threads). It is recommended to have this value at least twice MaxThreads if
#  possible.
# WARNING: you shouldn't increase this too much to avoid running out of file
#  descriptors, the following condition should hold: MaxThreads*MaxRecursion +
#  MaxQueue - MaxThreads + 6 < RLIMIT_NOFILE. RLIMIT_NOFILE is the maximum number
#  of open file descriptors (usually 1024), set by ulimit -n.
# Default: 100
MaxQueue 100

# This option specifies how long (in seconds) the process should wait for a
#  new job.
# Default: 30
IdleTimeout 30

# Don't scan files and directories matching REGEX. This directive can be used
#  multiple times.
# Default: disabled
# ExcludePath REGEX

# Maximum depth directories are scanned at.
# Default: 15
MaxDirectoryRecursion 15

# Follow directory symlinks.
# Default: no
FollowDirectorySymlinks false

# Scan files and directories on other filesystems.
# Default: yes
CrossFilesystems true

# Follow regular file symlinks.
# Default: no
FollowFileSymlinks false

# This option specifies the time intervals (in seconds) in which clamd should
#  perform a database check.
# Default: 600
SelfCheck 3600

# Execute a command when a virus is found. In the command string %v will be
#  replaced with the virus name. Additionally, two environment variables will be
#  defined: $CLAM_VIRUSEVENT_FILENAME and $CLAM_VIRUSEVENT_VIRUSNAME.
# Default: disabled
# VirusEvent COMMAND
VirusEvent /etc/clamav/virus_message_slack.sh '%v' $CLAM_VIRUSEVENT_FILENAME $CLAM_VIRUSEVENT_VIRUSNAME

# Stop daemon when libclamav reports out of memory condition.
# Default: no
ExitOnOOM false

# Permit use of the ALLMATCHSCAN command.
# Default: yes
AllowAllMatchScan true

# Don't fork into background.
# Default: no
Foreground false

# Enable debug messages from libclamav.
# Default: no
Debug false

# Do not remove temporary files (for debugging purpose).
# Default: no
LeaveTemporaryFiles false

# Run the daemon as a specified user (the process must be started by root).
# Default: disabled
User clamav

# DEPRECATED
# Initialize a supplementary group access (the process must be started by root).
# Default: no
# AllowSupplementaryGroups true

# With this option enabled ClamAV will load bytecode from the database. It is
#  highly recommended you keep this option turned on, otherwise you may miss
#  detections for many new viruses.
# Default: yes
Bytecode true

# Set bytecode security level.
# Possible values:
# 	- TrustSigned : trust bytecode loaded from signed .c[lv]d files and insert
# 					runtime safety checks for bytecode loaded from other
# 					sources,
# 	- Paranoid    : don't trust any bytecode, insert runtime checks for all.
# Recommended: TrustSigned, because bytecode in .cvd files already has these
#  checks.
# Default: TrustSigned
BytecodeSecurity TrustSigned

# Set bytecode timeout in milliseconds.
# Default: 5000
BytecodeTimeout 60000

# Allow loading bytecode from outside digitally signed .c[lv]d files.
# Default: no
BytecodeUnsigned false

# Set bytecode execution mode.
# Possible values:
# 	- Auto     		   	: automatically choose JIT if possible, fallback to
# 						  interpreter
# 	- ForceJIT 		   	: always choose JIT, fail if not possible
# 	- ForceInterpreter 	: always choose interpreter
# 	- Test 			   	: run with both JIT and interpreter and compare
# 						  results. Make all failures fatal.
# Default: Auto
BytecodeMode Auto

# Detect Possibly Unwanted Applications.
# Default: No
DetectPUA true

# Exclude a specific PUA category. This directive can be used multiple times.
# See https://www.clamav.net/documents/potentially-unwanted-applications-pua
#  for the complete list of PUA categories.
#
# PUA Categories:
# - Packed
#    This is a detection for files that use some kind of runtime packer. A
#    runtime packer can be used to reduce the size of executable files without
#    the need for an external unpacker. While this can‘t be considered
#    malicious in general, runtime packers are widely used with malicious
#    files since they can prevent a already known malware from detection by an
#    Antivirus product.
# - PwTool
#    Password tools are all applications that can be used to recover or decrypt
#    passwords for various applications - like mail clients or system passwords.
#    Such tools can be quite helpful if a password is lost, however, it can also
#    be used to spy out passwords.
# - NetTool
#    Applications that can be used to sniff, filter, manipulate or scan network
#    traffic or networks. While a networkscanner - for example - can be a
#    extremely helpful tool for admins, you may not want to see an average user
#    playing around with it. Same goes for tools like netcat and the like.
# - P2P
#    Peer to Peer clients can be used to generate a lot of unwanted traffic and
#    sometimes it happens that copyrights are violated by downloading copyright
#    protected content (Music, Movies) - therefore we consider them possibly
#    unwanted as well.
# - IRC
#    IRC Clients can be a productivity killer and depending on the client - a
#    powerful platform for malicious scripts (take mIRC for example).
# - RAT
#    Remote Access Trojans are used to remotely access systems, but can be used
#    also by system admins, for example VNC or RAdmin.
# - Tool
#    General system tools, like process killers/finders.
# - Spy
#    Keyloggers, spying tools.
# - Server
#    Server based badware like DistributedNet.
# - Script
#    Known “problem” scripts written in JavaScript, ActiveX or similar.
# Default: disabled
# ExcludePUA CATEGORY

# Only include a specific PUA category. This directive can be used multiple
#  times.
# See https://www.clamav.net/documents/potentially-unwanted-applications-pua
#  for the complete list of PUA categories.
# Default: disabled
# IncludePUA CATEGORY

# In some cases (eg. complex malware, exploits in graphic files, and others),
#  ClamAV uses special algorithms to provide accurate detection. This option
#  controls the algorithmic detection.
# Default: yes
AlgorithmicDetection true

# PE stands for Portable Executable - it's an executable file format used in
#  all 32 and 64-bit versions of Windows operating systems. This option allows
#  ClamAV to perform a deeper analysis of executable files and it's also required
#  for decompression of popular executable packers such as UPX.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanPE true

# Executable and Linking Format is a standard format for UN*X executables. This
#  option allows you to control the scanning of ELF files.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanELF true

# DEPRECATED
# With this option clamd will try to detect broken executables (both PE and
#  ELF) and mark them as Broken.Executable.
# Default: no
# DetectBrokenExecutables true

# Enable scanning of mail files.
# If you turn off this option, the original files will still be scanned, but
#  without parsing individual messages/attachments.
# Default: yes
ScanMail true

# Scan RFC1341 messages split over many emails. You will need to periodically
#  clean up $TemporaryDirectory/clamav-partial directory. WARNING: This option may
#  open your system to a DoS attack. Never use it on loaded servers.
# Default: no
ScanPartialMessages false

# With this option enabled ClamAV will try to detect phishing attempts by using
#  signatures.
# Default: yes
PhishingSignatures true

# Scan URLs found in mails for phishing attempts using heuristics. This will
#  classify "Possibly Unwanted" phishing emails as Phishing.Heuristics.Email.*
# Default: yes
PhishingScanURLs true

# Always block cloaked URLs, even if URL isn't in database. This can lead to
#  false positives.
# Default: no
PhishingAlwaysBlockCloak false

# Always block SSL mismatches in URLs, even if the URL isn't in the database.
#  This can lead to false positives.
# Default: no
PhishingAlwaysBlockSSLMismatch false

# Detect partition intersections in raw disk images using heuristics.
# Default: no
PartitionIntersection false

# Allow heuristic match to take precedence. When enabled, if a heuristic scan
#  (such as phishingScan) detects a possible virus/phishing it will stop scanning
#  immediately. Recommended, saves CPU scan-time. When disabled, virus/phishing
#  detected by heuristic scans will be reported only at the end of a scan. If an
#  archive contains both a heuristically detected virus/phishing, and a real
#  malware, the real malware will be reported. Keep this disabled if you intend
#  to handle "*.Heuristics.*" viruses differently from "real" malware. If a
#  non-heuristically-detected virus (signature-based) is found first, the scan is
#  interrupted immediately, regardless of this config option.
# Default: no
HeuristicScanPrecedence false

# Enable the DLP module.
# Default: no
StructuredDataDetection true

# This option sets the lowest number of Credit Card numbers found in a file to
#  generate a detect.
# Default: 3
StructuredMinCreditCardCount 1

# This option sets the lowest number of Social Security Numbers found in a file
#  to generate a detect.
# Default: 3
StructuredMinSSNCount 1

# With this option enabled the DLP module will search for valid SSNs formatted
#  as xxx-yy-zzzz.
# Default: Yes
StructuredSSNFormatNormal true

# With this option enabled the DLP module will search for valid SSNs formatted
#  as xxxyyzzzz.
# Default: No
StructuredSSNFormatStripped true

# Perform HTML/JavaScript/ScriptEncoder normalisation and decryption.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanHTML true

# This option enables scanning of OLE2 files, such as Microsoft Office
#  documents and .msi files.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanOLE2 true

# With this option enabled OLE2 files with VBA macros, which were not detected
#  by signatures will be marked as "Heuristics.OLE2.ContainsMacros".
# Default: no
OLE2BlockMacros true

# This option enables scanning within PDF files.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanPDF true

# This option enables scanning within SWF files.
# If you turn off this option, the original files will still be scanned, but
#  without decoding and additional processing.
# Default: yes
ScanSWF true

# This option enables scanning xml-based document files supported by libclamav.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanXMLDOCS true

# This option enables scanning HWP3 files.
# If you turn off this option, the original files will still be scanned, but
#  without additional processing.
# Default: yes
ScanHWP3 true

# Scan within archives and compressed files.
# If you turn off this option, the original files will still be scanned, but
#  without unpacking and additional processing.
# Default: yes
ScanArchive true

# Mark encrypted archives as viruses (Encrypted.Zip, Encrypted.RAR).
# Default: no
ArchiveBlockEncrypted false

# This option causes memory or nested map scans to dump the content to disk.
# If you turn on this option, more data is written to disk and is available
#  when the leave-temps option is enabled at the cost of more disk writes.
# Default: no
ForceToDisk false

# Sets the maximum amount of data to be scanned for each input file. Archives
#  and other containers are recursively extracted and scanned up to this value.
#  The size of an archive plus the sum of the sizes of all files within archive
#  count toward the scan size. For example, a 1M uncompressed archive containing a
#  single 1M inner file counts as 2M toward the max scan size. Warning: disabling
#  this limit or setting it too high may result in severe damage to the system.
# Default: 100M
MaxScanSize 100M

# Files larger than this limit won't be scanned. Affects the input file itself
#  as well as files contained inside it (when the input file is an archive, a
#  document or some other kind of container). Warning: disabling this limit or
#  setting it too high may result in severe damage to the system.
# Default: 25M
MaxFileSize 25M

# Nested archives are scanned recursively, e.g. if a Zip archive contains a RAR
#  file, all files within it will also be scanned. This options specifies how
#  deeply the process should be continued. Warning: setting this limit too high
#  may result in severe damage to the system.
# Default: 16
MaxRecursion 16

# Number of files to be scanned within an archive, a document, or any other
#  kind of container. Warning: disabling this limit or setting it too high may
#  result in severe damage to the system.
# Default: 10000
MaxFiles 10000

# This option sets the maximum size of a file to check for embedded PE.
# Files larger than this value will skip the additional analysis step.
# Negative values are not allowed.
# Default: 10M
MaxEmbeddedPE 10M

# This option sets the maximum size of a HTML file to normalize.
# HTML files larger than this value will not be normalized or scanned.
# Negative values are not allowed.
# Default: 10M
MaxHTMLNormalize 10M

# This option sets the maximum size of a normalized HTML file to scan.
# HTML files larger than this value after normalization will not be scanned.
# Negative values are not allowed.
# Default: 2M
MaxHTMLNoTags 2M

# This option sets the maximum size of a script file to normalize.
# Script content larger than this value will not be normalized or scanned.
# Negative values are not allowed.
# Default: 5M
MaxScriptNormalize 5M

# This option sets the maximum size of a ZIP file to reanalyze type
#  recognition.
# ZIP files larger than this value will skip the step to potentially reanalyze
#  as PE.
# Negative values are not allowed.
# WARNING: setting this limit too high may result in severe damage or impact
#  performance.
# Default: 1M
MaxZipTypeRcg 1M

# This option sets the maximum number of partitions of a raw disk image to be
#  scanned.
# Raw disk images with more partitions than this value will have up to the
#  value partitions scanned.
# Negative values are not allowed.
# WARNING: setting this limit too high may result in severe damage or impact
#  performance.
# Default: 50
MaxPartitions 50

# This option sets the maximum number of icons within a PE to be scanned.
# PE files with more icons than this value will have up to the value number
#  icons scanned.
# Negative values are not allowed.
# WARNING: setting this limit too high may result in severe damage or impact
#  performance.
# Default: 100
MaxIconsPE 100

# This option sets the maximum recursive calls to HWP3 parsing function.
# HWP3 files using more than this limit will be terminated and alert the user.
# Scans will be unable to scan any HWP3 attachments if the recursive limit is
#  reached.
# Negative values are not allowed.
# WARNING: setting this limit too high may result in severe damage or impact
#  performance.
# Default: 16
MaxRecHWP3 16

# This option sets the maximum calls to the PCRE match function during an
#  instance of regex matching.
# Instances using more than this limit will be terminated and alert the user
#  but the scan will continue.
# For more information on match_limit, see the PCRE documentation.
# Negative values are not allowed.
# WARNING: setting this limit too high may severely impact performance.
# Default: 10000
PCREMatchLimit 10000

# This option sets the maximum recursive calls to the PCRE match function
#  during an instance of regex matching.
# Instances using more than this limit will be terminated and alert the user
#  but the scan will continue.
# For more information on match_limit_recursion, see the PCRE documentation.
# Negative values are not allowed and values > PCREMatchLimit are superfluous.
# WARNING: setting this limit too high may severely impact performance.
# Default: 5000
PCRERecMatchLimit 5000

# This option sets the maximum filesize for which PCRE subsigs will be
#  executed.
# Files exceeding this limit will not have PCRE subsigs executed unless a
#  subsig is encompassed to a smaller buffer.
# Negative values are not allowed.
# Setting this value to zero disables the limit.
# WARNING: setting this limit too high or disabling it may severely impact
#  performance.
# Default: 25M
PCREMaxFileSize 25M

# This option enables on-access scanning (Linux only)
# Default: disabled
ScanOnAccess false

# This option specifies a directory (including all files and directories inside
#  it), which should be scanned on access. This option can be used multiple times.
# Default: disabled
# OnAccessIncludePath STRING

# This option allows excluding directories from on-access scanning. It can be
#  used multiple times.
# Default: disabled
# OnAccessExcludePath STRING

# With this option you can whitelist specific UIDs. Processes with these UIDs
#  will be able to access all files.
# This option can be used multiple times (one per line).
# Default: disabled
# OnAccessExcludeUID NUMBER

# Files larger than this value will not be scanned in on access.
# Default: 5M
OnAccessMaxFileSize 5M

# Specifies a mount point (including all files and directories under it), which
#  should be scanned on access. This option can be used multiple times.
# Default: disabled
# OnAccessMountPath STRING

# Disables the dynamic directory determination system which allows for
#  recursively watching include paths.
# Default: no
OnAccessDisableDDD false

# Enables fanotify blocking when malicious files are found.
# Default: disabled
OnAccessPrevention false

# Disable authenticode certificate chain verification in PE files.
# Default: no
DisableCertCheck false

# DEPRECATED
# Enable submission of statistical data
# Default: no
# StatsEnabled false

# DEPRECATED
# HostID in the form of an UUID to use when submitting statistical information.
# Default: auto
# StatsHostID auto

# DEPRECATED
# Disable submission of PE section statistical data.
# Default: no
# StatsPEDisabled true

# DEPRECATED
# Timeout in seconds to timeout communication with the stats server.
# Default: 10
# StatsTimeout 10

################################################################################
#                                Socket Options                                #
################################################################################

# Path to a local (Unix) socket the daemon will listen on.
# Default: disabled
# LocalSocket /var/run/clamav/clamd.ctl

# Sets the group ownership on the unix socket.
# Default: the primary group of the user running clamd
LocalSocketGroup clamav

# Sets the permissions on the unix socket to the specified mode.
# Default: socket is world readable and writable
LocalSocketMode 666

# Remove stale socket after unclean shutdown.
# Default: yes
FixStaleSocket true

# TCP port number the daemon will listen on.
# Default: disabled
TCPSocket 3310

# By default clamd binds to INADDR_ANY.
# This option allows you to restrict the TCP address and provide some degree
#  of protection from the outside world. This option can be specified multiple
#  times in order to listen on multiple IPs. IPv6 is now supported.
# Default: disabled
# TCPAddr 127.0.0.1

# Maximum length the queue of pending connections may grow to.
# Default: 200
MaxConnectionQueueLength 15

# Close the STREAM session when the data size limit is exceeded.
# The value should match your MTA's limit for the maximum attachment size.
# Default: 25M
StreamMaxLength 25M

# The STREAM command uses an FTP-like protocol.
# This option sets the lower boundary for the port range.
# Default: 1024
StreamMinPort 1024

# This option sets the upper boundary for the port range.
# Default: 2048
StreamMaxPort 2048
